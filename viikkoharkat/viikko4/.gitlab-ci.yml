variables:
    REMOTE_HOST: deploy@172.16.5.138 # tahan oma ip !!!!!!
    REMOTE_DIR: weather-app
  
stages:
    - deploy
  
deploy:
  only:
    changes:
      - .gitlab-ci.yml
      - weather-app/**/*
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  script:
    - cd weather-app
    - export FRONTEND_IMAGE="${CI_REGISTRY_IMAGE}/${REMOTE_DIR}/frontend"
    - export BACKEND_IMAGE="${CI_REGISTRY_IMAGE}/${REMOTE_DIR}/backend"
    - apk update && apk add rsync openssh
    - docker login -u gitlab-ci-token -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - mkdir -p ~/.ssh && (umask  077 ; echo "${DEPLOY_KEY_PRIVATE}" | base64 -d > ~/.ssh/id_rsa)
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - docker build --no-cache -f .dockerfiles/FrontendDev -t "${FRONTEND_IMAGE}" .
    - docker build --no-cache -f .dockerfiles/BackendDev -t "${BACKEND_IMAGE}" .
    - docker push "${FRONTEND_IMAGE}"
    - docker push "${BACKEND_IMAGE}"
    - mkdir "${REMOTE_DIR}"
    - cp docker-compose.prod.yml "${REMOTE_DIR}/docker-compose.yml"
    - echo "FRONTEND_IMAGE=${FRONTEND_IMAGE}" >> "${REMOTE_DIR}/.env"
    - echo "BACKEND_IMAGE=${BACKEND_IMAGE}" >> "${REMOTE_DIR}/.env"
    - rsync -r "${REMOTE_DIR}" "${REMOTE_HOST}:./"
    - ssh ${REMOTE_HOST} /bin/bash "
        echo ${REMOTE_DIR};
        cd ~/$REMOTE_DIR;
        docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY;
        docker-compose pull;
        docker-compose up -d --force-recreate
        "
        
